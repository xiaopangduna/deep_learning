train:
  # trainer
  trainer_cfgs: &trainer_cfgs
    devices: 1
    accelerator: auto
    check_val_every_n_epoch: 5
    precision: 16-mixed
    log_every_n_steps: 50
    accumulate_grad_batches: 16
    limit_train_batches: 1.0
    limit_val_batches: 1.0
    limit_test_batches: 1.0
    # fast_dev_run: True
    # enable_progress_bar: True
    # enable_model_summary: True
    # enable_checkpointing: True
  trainer: 
    max_epochs: 500
    min_epochs: 1
    <<: *trainer_cfgs
  # dataset
  dataset_class: &dataset_class DirectionalCornerDetectionDataset
  dataset_cfgs: &dataset_cfgs
    "output_size": [16, 16]
    "input_size": [3, 512, 512]
    "classes": ["L","T"]
  datasets: &datasets
    train: 
      path_txts: ["../database/ps2.0/train.txt"]
      transforms: train
      cfgs: 
        <<: *dataset_cfgs  
    val:
      path_txts: ["../database/ps2.0/val.txt"]
      transforms: val
      cfgs: 
        <<: *dataset_cfgs
  # dataloader
  dataloader_class: &dataloader_class DataLoader
  dataloader_cfgs: &dataloader_cfgs
    batch_size: 16
    pin_memory: False
    num_workers: 4
  dataloaders: &dataloaders
    train: 
      shuffle: True
      <<: *dataloader_cfgs
    val:
      shuffle: False
      <<: *dataloader_cfgs
  module_class: &module_class DirectionalCornerDetectionModule
  module_cfgs: &module_cfgs
    # model_name: &model_name DirectionalCornerDetectionModel # DMPR
    # model_hparams: {input_size: [1, 3, 512, 512], feature_map_channel : 6, depth_factor : 32}
    model_name: &model_name DirectionalCornerDetectionModel # DMPR
    model_hparams: {backbone_name : resnet18, pretrained : False ,input_size: [1, 3, 512, 512],  output_size: [1,7,16, 16]}
    optimizer_name: Adam
    optimizer_hparams: {lr: 1.0e-3, weight_decay: 1.0e-4}
    loss_name: DirectionalCornerDetectionLoss
    loss_hparams: {num_classes: 2}
    metrics_name: DirectionalCornerDetectionMetric
    metrics_hparams:  
            class_to_index: {L: 0, T: 1}
            confidence_threshold: 0.5
            distance_threshold: 0.1
            angle_threshold: 5
            consider_class: True

  # logger for trainer
  loggers: &loggers [TensorBoardLogger]
  TensorBoardLogger: &TensorBoardLogger
    save_dir: ./logs
    name: *model_name
    version: null
    log_graph: True
  # callback for trainer
  callbacks: &callbacks [ModelCheckpoint,LearningRateMonitor,ModelSummary]
  ModelCheckpoint: &ModelCheckpoint
    filename: "{epoch}-{accuracy/val:.2f}"
    mode: max
    monitor: accuracy/val
    save_last: True
  LearningRateMonitor: &LearningRateMonitor
    logging_interval: epoch
  ModelSummary: &ModelSummary
    max_depth: 1
  # profiler for trainer
  profiler: &profiler SimpleProfiler
  SimpleProfiler: &SimpleProfiler
    dirpath: null
    filename: *model_name
    extended: true
 
train_resume:
  path_ckpt: logs/DirectionalCornerDetectionModel/version_0/checkpoints/last.ckpt
  trainer: 
    max_epochs: 500
    min_epochs: 1
    <<: *trainer_cfgs
  module_class: *module_class
  dataset_class: *dataset_class
  datasets: *datasets
  dataloader_class: *dataloader_class
  dataloaders: *dataloaders
  # logger for trainer
  loggers: *loggers 
  TensorBoardLogger: 
    save_dir: ./logs
    log_graph: True
  # callback for trainer
  callbacks: *callbacks
  ModelCheckpoint: *ModelCheckpoint
  LearningRateMonitor: *LearningRateMonitor
  ModelSummary: *ModelSummary
  # profiler for trainer
  profiler: *profiler
  SimpleProfiler: *SimpleProfiler
  
train_pruning:
  path_ckpt: null
  pruning_train_epochs: [2,2] # 每轮剪枝训练的轮次
  pruning_cfgs:
    pruning_ratio: 0.5
  trainer: 
    <<: *trainer_cfgs
  module_class: *module_class
  dataset_class: *dataset_class
  datasets: *datasets
  dataloader_class: *dataloader_class
  dataloaders: *dataloaders
  # logger for trainer
  loggers: *loggers 
  TensorBoardLogger: 
    save_dir: ./logs 
    log_graph: True
  # callback for trainer
  callbacks: [ModelCheckpoint,LearningRateMonitor,ModelSummary]
  ModelCheckpoint: *ModelCheckpoint
  LearningRateMonitor: *LearningRateMonitor
  ModelSummary: *ModelSummary
  # profiler for trainer
  profiler: *profiler
  SimpleProfiler: *SimpleProfiler

train_quantization:
  path_ckpt: null
  dataset_class: *dataset_class
  datasets: *datasets
  dataloader_class: *dataloader_class
  dataloaders: *dataloaders
  module_class: *module_class   
  callbacks: [ModelCheckpoint,LearningRateMonitor,ModelSummary]
  ModelCheckpoint: *ModelCheckpoint
  LearningRateMonitor: *LearningRateMonitor
  ModelSummary: *ModelSummary
  profiler: *profiler
  SimpleProfiler: *SimpleProfiler
  # logger for trainer
  loggers: *loggers 
  TensorBoardLogger: 
    save_dir: ./logs 
    log_graph: True
  trainer: 
    max_epochs: 10
    min_epochs: 1
    <<: *trainer_cfgs

export_onnx:
  path_model: null
  module_class: *module_class
  export_onnx_cfgs:
    mode: onnx
    input_size: [1, 3, 224, 224]
    is_quantization: false
    path_save: null

test:
  path_ckpt: logs/DirectionalCornerDetectionModel/version_1/checkpoints/last.ckpt
  module_class: *module_class
  module_cfgs: *module_cfgs
  dataset_class: *dataset_class
  datasets: 
    test: 
      path_txts: ["../database/ps2.0/test.txt"]
      transforms: test
      cfgs: 
        <<: *dataset_cfgs  
  dataloader_class: *dataloader_class
  dataloaders: 
    test:
      shuffle: False
      <<: *dataloader_cfgs
  # 使用自定义的profile
  profile_cfgs: &profile_cfgs
    use_gpu: True
    use_gpu: true
    warmup_runs: 3
    actual_runs: 10
    save_folder: null
  # 现环境无法使用
  # profiler: PyTorchProfiler
  # PyTorchProfiler: 
  #   dirpath: null
  #   filename: *model_name
  #   group_by_input_shapes: true
  trainer: 
    <<: *trainer_cfgs

predict:
  path_ckpt: logs/DirectionalCornerDetectionModel/version_0/checkpoints/last.ckpt
  module_class: *module_class
  module_cfgs: 
    <<: *module_cfgs
    dir_save_predict_images: ./tmp # 确保文件夹存在，否则无法保存图片
  dataset_class: *dataset_class
  datasets: 
    predict: 
      path_txts: ["../database/ps2.0/test.txt"]
      transforms: test
      cfgs: 
        <<: *dataset_cfgs  
  dataloader_class: *dataloader_class
  dataloaders: 
    predict:
      shuffle: False
      batch_size: 2
      <<: *dataloader_cfgs
  trainer: 
    <<: *trainer_cfgs




